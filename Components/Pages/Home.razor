@page "/"
@inject NavigationManager NavManager
@inject PDFService PdfService
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<section id="frontpage">

    <h1>Velkommen til Arvefordeleren!</h1>
    <div>
        <p class="description">
            <b>Planlægning af arv gjort enkelt og overskueligt.</b><br />
            Arvefordeleren er din digitale løsning til at visualisere fordelingen af din arv, aktiver og familiestamtræ.
            Vores værktøj hjælper dig med at skabe en gennemsigtig og retfærdig fordeling, så du kan sikre, at dine ønsker bliver respekteret –
            uden unødvendige komplikationer for dine nærmeste.
        </p>
        <div class="description">
            <b>Med Arvefordeleren kan du:</b> <br />
            <ul>
                <li>Visualisere din arv: Få et tydeligt overblik over, hvordan dine aktiver fordeles.</li>
                <li>Oprette dit stamtræ: Se familiære forbindelser og få styr på din planlægning.</li>
                <li>Træffe trygge beslutninger: Test forskellige fordelingsmodeller og få klarhed over konsekvenserne.</li>
            </ul>
        </div>
    </div>

    <div id="buttons-cointainer">
        <div id="input-div">
            <InputFile id="file-input" OnChange="OnFileSelected" accept="application/pdf" class="visually-hidden" /> @* visually-hidden is Bootstrap and hides the input. *@
            <label id="input-button" for="file-input" class="button">Importer PDF</label>

            @if (!string.IsNullOrEmpty(FileMessage))
            {
                <p>@FileMessage</p>
            }
        </div>

        <button id="continue" class="button" @onclick="NavigateToOverview">Start ny visning</button>
    </div>
</section>

<!-- Modal for Password Prompt -->
<div class="modal @(ShowPasswordModal ? "show" : "")" tabindex="-1" style="display: @(ShowPasswordModal ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Indtast PDF-adgangskode</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="CloseModal"></button>
            </div>
            <div class="modal-body">
                <InputText @bind-Value="PdfPassword" placeholder="Adgangskode" type="password" class="form-control" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="ProcessPDF">Bekræft</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string FileMessage { get; set; } = "";
    private string PdfPassword { get; set; } = "";
    private bool ShowPasswordModal { get; set; } = false;

    private IBrowserFile SelectedFile { get; set; } = null!;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;

        // Ensure the file is a PDF
        if (file.ContentType == "application/pdf")
        {
            SelectedFile = file;
            ShowPasswordModal = true; // Show the modal to get the password
        }
        else
        {
            FileMessage = "Ugyldig filtype. Kun PDF er godtaget.";
        }

        StateHasChanged();
    }

    private async Task ProcessPDF()
    {
        if (SelectedFile == null)
        {
            FileMessage = "Ingen fil valgt.";
            return;
        }

        try
        {
            // Read the file into memory
            using var stream = SelectedFile.OpenReadStream(maxAllowedSize: 10_000_000);
            var pdfContent = new byte[SelectedFile.Size];
            await stream.ReadAsync(pdfContent);

            // Send the file and password to the PDF service
            PdfService.ImportPdf(pdfContent, PdfPassword);

            // if (result.Success)
            // {
            //     FileMessage = "PDF importeret med succes!";
            //     CloseModal();
            // }
            // else
            // {
            //     FileMessage = $"Fejl: {result.ErrorMessage}";
            // }
        }
        catch (Exception ex)
        {
            FileMessage = $"Error processing PDF: {ex.Message}";
        }

        StateHasChanged();
    }

    private void CloseModal()
    {
        ShowPasswordModal = false;
        PdfPassword = "";
        StateHasChanged();
    }

    private void NavigateToOverview()
    {
        NavManager.NavigateTo("/overview");
    }
}
