@page "/"

@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<section id="frontpage">

    <h1>Velkommen til Arvefordeleren!</h1>
    <div>
        <p class="description">
            <b>Planlægning af arv gjort enkelt og overskueligt.</b><br />
            Arvefordeleren er din digitale løsning til at visualisere fordelingen af din arv, aktiver og familiestamtræ.
            Vores værktøj hjælper dig med at skabe en gennemsigtig og retfærdig fordeling, så du kan sikre, at dine ønsker bliver respekteret –
            uden unødvendige komplikationer for dine nærmeste.
        </p>
        <div class="description">
            <b>Med Arvefordeleren kan du:</b> <br />
            <ul>
                <li>Visualisere din arv: Få et tydeligt overblik over, hvordan dine aktiver fordeles.</li>
                <li>Oprette dit stamtræ: Se familiære forbindelser og få styr på din planlægning.</li>
                <li>Træffe trygge beslutninger: Test forskellige fordelingsmodeller og få klarhed over konsekvenserne.</li>
            </ul>
        </div>
    </div>

    <div id="buttons">
        <div id="input-div">
            <InputFile id="file-input" OnChange="ImportPDF" accept="application/pdf" class="visually-hidden" /> @* visually-hidden is Bootstrap and hides the input. *@
            <label id="input-button" for="file-input" class="frontpage-buttons">Importer PDF</label>

            @if (!string.IsNullOrEmpty(FileMessage))
            {
                <p>@FileMessage</p>
            }
        </div>

        <a href="/overview" class="frontpage-buttons a-buttons">Start ny visning</a>
    </div>
</section>

@code {
    private string FileMessage { get; set; } = "";

    private void ImportPDF(InputFileChangeEventArgs e)
    {
        var file = e.File;

        // Ensure the file is a PDF
        if (file.ContentType == "application/pdf")
        {
            FileMessage = "Uploadet fil: " + file.Name;
        }
        else
        {
            FileMessage = "Ugyldig filtype. Kun PDF er godtaget.";
        }

        StateHasChanged();
    }

    // This method runs when the page is first rendered
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Add class to the body element when the page first renders
            await JSRuntime.InvokeVoidAsync("addClassToBody", "home-page");
        }
    }

    // This method runs when the component is disposed (when navigating away from the page)
    public async ValueTask DisposeAsync()
    {
        // Remove the class from the body when navigating away from the page
        await JSRuntime.InvokeVoidAsync("removeClassFromBody", "home-page");
    }
}

