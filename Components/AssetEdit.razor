@rendermode InteractiveServer
<label>
    Navn:
    <InputText @bind-value="editAsset.Name"></InputText>
</label>
<label>
    Værdi:
    <InputNumber @bind-Value="editAsset.Value"></InputNumber>
</label>
<label>
    Beskrivelse:
    <InputText @bind-Value="editAsset.Description"></InputText>
</label>

<label>
    Relation:
    <InputSelect @bind-Value="selectedTestatorName">
        @if (selectedTestatorName == null)
        {
            <option value="">none</option>
        }
        @foreach (var testator in _testators)
        {
            <option value="@testator.Name">@testator.Name</option>
        }
    </InputSelect>
    <button @onclick="()=> selectedTestator.AddAsset(editAsset)">Tilføj asset</button>
</label>

@code {
    [Parameter]
    public Int32? EditIndex { get; set; }
    private Asset editAsset { get; set; }
    private IEnumerable<Person> _persons => FamilyTree.GetMembers();
    private IEnumerable<Testator> _testators => Inheritance.GetTestators();
    private String? selectedTestatorName { get; set; } = null;
    private Testator selectedTestator => _testators.First(t => t.Name == selectedTestatorName);

    protected override void OnParametersSet()
    {
        if (EditIndex != null)
        {
            editAsset = Inheritance.GetAssets()[(Int32)EditIndex];
            Console.WriteLine($"EditTestator: {editAsset.Name}");
            InvokeAsync(StateHasChanged);
        }
        else
        {
            editAsset = new();
        }
        //Console.WriteLine("OnParametersSet");
        base.OnParametersSet();
    }

    public void Submit()
    {
        Inheritance.AddAsset(editAsset);
        Reset();
    }

    public void Delete()
    {
        Inheritance.DeleteAsset(editAsset);
        Reset();
    }
    
    private void Reset()
    {
        try
        {
            InvokeAsync(StateHasChanged);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        editAsset = new();
        EditIndex = null;
        selectedTestatorName = null;
    }
}